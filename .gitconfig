[core]
	# Use custom `.gitignore`
	excludesfile = /Users/Guillaume/.gitignore_global
	# Treat spaces before tabs, lines that are indented with 8 or more spaces, and all kinds of trailing whitespace as an error
	whitespace = space-before-tab,indent-with-non-tab,trailing-space
	ignorecase = false
	editor = "nvim -u ~/.vim/.vimrc.git --noplugin"
  hooksPath = "~/.home/git/hooks"
[color]
	# Use colors in Git commands that are capable of colored output when outputting to the terminal
	ui = auto
[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green
[color "diff"]
	meta = yellow bold
	frag = magenta bold
	old = red bold
	new = green bold
[color "status"]
	added = yellow
	changed = green
	untracked = cyan
[user]
	name = Guillaume Wuip
	email = guillaume@wuips.com
[filter "media"]
	clean = git-media-clean %f
	smudge = git-media-smudge %f
[push]
	default = simple
	followTags = true
[alias]
    hub =! echo `git config remote.origin.url` | sed -E s/[a-z]+@github\\.com:// | sed s/\\.git$//
    ls = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate
    ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
    lg = log --graph --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all
    lastid = log --format="%H" -n 1
    rp = rebase -p
    rebasei =! git rebase -i --autosquash $(git --no-pager ls -n 50 | fzf | cut -d' ' -f1)
    rebaseo =! git rebase $(git branch -a | grep origin | fzf | cut -d'/' -f2-)
    rebasel =! git rebase $(git branch -a | grep -v origin | fzf | cut -d'/' -f2-)
    rom =! git rebase origin/master
    fix =! git commit --fixup $(git --no-pager ls -n 50 | fzf | cut -d' ' -f1)
    fixh =! git commit --fixup $(git --no-pager ls -n 50 | grep -v fixup! | fzf | cut -d' ' -f1)
    addf =! git add ''\"$(git status --short | fzf | awk '{$1=$1}1' | cut -d' ' -f2- | sed -E 's/\"//g')\"''
    showf =! git show $(git --no-pager ls -n 50 | fzf | cut -d' ' -f1)
    difff =! git diff ''\"$(git status --short | fzf | awk '{$1=$1}1' | cut -d' ' -f2- | sed -E 's/\"//g')\"''
    checkoutf =! git checkout $(git branch | fzf)
    pr =! hub pull-request -a guillaumewuip --edit
    fa =! git fetch -a
    pushf =! git push --force-with-lease
[diff]
	tool = vimdiff
	algorithm = patience
[merge]
	tool = vimdiff
[filter "lfs"]
	required = true
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
[credentials]
	helper = cache
[rerere]
	enabled = true
[rebase]
	autoStash = true
[pager]
  diff = diff-so-fancy | less --tabs=1,5 -RFX
  show = diff-so-fancy | less --tabs=1,5 -RFX
